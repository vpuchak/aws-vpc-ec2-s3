---
- name: Create new vpc
  ec2_vpc_net:
    name: "{{ project }}-vpc"
    cidr_block: "{{ cidr }}"
    region: "{{ region }}"
    dns_hostnames: yes
    dns_support: yes
    state: present
    tags:
      Project: "{{ project }}"
    tenancy: default
  register: vpc
  tags: vpc
- debug: var=vpc
- set_fact:
    vpc_id: "{{ vpc.vpc.id }}"


- name: Create igw
  ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    state: present
  register: igw
  tags: igw
- debug: var=igw
-  set_fact:
    igw_id: "{{ igw.gateway_id }}"


- name: Create subnet for instance
  ec2_vpc_subnet:
    state: present
    region: "{{ region }}"
    az: "{{ az }}"
    vpc_id: "{{ vpc_id }}"
    cidr: 10.0.0.0/28
    tags:
      Name: "{{ project }}-subnet"
      Project: "{{ project }}"
  register: subnet
  tags: subnet
- debug: var=subnet
- set_fact:
    subnet_id: "{{ subnet.subnet.id }}"


- name: Set up route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    tags:
      Name: public-rt
      Public: yes
    subnets:
      - "{{ subnet_id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_id }}"
  register: rt
  tags: rt
- debug: var=rt
- set_fact:
    rt_id: "{{ rt.route_table.id }}"
- debug: var=rt_id


- name: Create and associate task network ACL with public subnet
  ec2_vpc_nacl:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    name: public-nacl
    subnets: "{{ subnet_id }}"
    tags:
      Project: "{{ project }}"
    ingress: [
        # rule no, protocol, allow/deny, cidr, icmp_code, icmp_type,
        #                                             port from, port to
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
    ]
    egress: [
        [100, 'all', 'allow', '0.0.0.0/0', null, null, null, null]
    ]
    state: present
  register: nacl
  tags: nacl
- debug: var=nacl
- set_fact:
    nacl_id: "{{ nacl.nacl_id }}"
  
  
- name: Create endpoint
  ec2_vpc_endpoint:
    state: present
    region: "{{ region }}"
    vpc_id: "{{ vpc_id }}"
    service: "com.amazonaws.{{ region }}.s3"
    policy: "{{ lookup( 'template', 'endpoint_policy.json.j2') }}"
    route_table_ids: "{{ rt_id }}"
  register: endpoint
  tags: endpoint
- debug: var=endpoint


- name: Create security group
  ec2_group:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules: "{{ item.rules }}"
    rules_egress: "{{ item.rules_egress }}"
  with_items: "{{ security_groups }}"
  register: sg
- debug: var=sg
